def sigmaPoints(x, P, n, Lambda):
    """
    Description
    this function computes the Sigma Points

    Inputs
    -------------------------------------------------------------------------------------------------------------------------------------------------------
    Variable      Variable Type       Description
    -------------------------------------------------------------------------------------------------------------------------------------------------------
    x             vector              Transformed mean
    -------------------------------------------------------------------------------------------------------------------------------------------------------
    P             matrix              Transformed covariance matrix
    -------------------------------------------------------------------------------------------------------------------------------------------------------
    n             scalar              Number of dimensions
    ------------------------------------------------------------------------------------------------------------------------------------------------------------------
    Lambda        scalar              Parameter of the 'modified' sigma-points algorithm
    ------------------------------------------------------------------------------------------------------------------------------------------------------------------


    Outputs
    -------------------------------------------------------------------------------------------------------------------------------------------------------
    S             matrix              Sigma Points
    ------------------------------------------------------------------------------------------------------------------------------------------------------------------

    """
    import numpy as np

    sqrMtrx = (Lambda + n) * P

    L = np.linalg.cholesky(sqrMtrx)


    S = np.zeros((n, 2 * n+1))

    x = x.reshape(-1)

    S[:, 0] = x


    for i in range (n):
        S[:, i + 1] = x + L[:, i]
        S[:, i + n + 1] = x - L[:, i]

    return S